#Start screen has large logo on top jumbotron with seinfeld logo and Hangman next to it in same font
    -below logo a row with that prompts player to press any key to start playing

    -then 2 columns:
        -left column has picture of seinfeld character with nothing removed
        -right column is composed of 3 rows
            ~row one is a box that displays h1 "current word/Phrase" unsolved
            and underneath the empty unsolved word/phrase           
            i.e. "__ __ - __ __ __ __ - __ __ __ - __ __ __!"

            ~row two is box that states Missed Letters: at beginning it is empty
            as user guesses words letter chosen will apper underneath.
            
            ~row three is a box that will track:
                -guesses remaining
                -rounds won
                -rounds lost


#choose random number from themed word array
    themeWordArray = array of words (every element is a word related to theme)
    hiddenWord = chosen random word from array
#display initial progress of word
    '_ '  * hiddenWord.length
#show remaining guesses
    remainingGuess = 8
#Prompt user for guess
    put 'guess a letter'
#player chooses character
    #if guess.length == 1 (its a character)
        #if correct add letter to hidden_word
        #if false subtract from count (count--)
        #display error for repeat guesses

#if chances == 0
    #puts "Sorry, you lose! Try Again!"


variables you need:
array with all letter
array with letters used
array with letters of unsolved word including spaces
array with possible words/phrases to solve
count down with guesses used
wins count
loss count

-press any key to start
-then a work is selected from the word bank
-then when user selects a letter it is removed from letters remaining and put into
letters used. if letter was used already nothing happens
-when letter chosen is not in array of unsolved letter guess count goes wrong and picture
of hanged square is flipped
-if letter is part of unsolved word the letter is revealed




some other code:



            /////////// RPS GAME DONE IN CLASS TO USE AS A REFERENCE /////////////

            // Creates an array that lists out all of the options (Rock, Paper, or Scissors).
            var computerChoices = ['r', 'p', 's'];

            // Creating variables to hold the number of wins, losses, and ties. They start at 0.
            var wins = 0;
            var losses = 0;
            var ties = 0;

            // Create variables that hold references to the places in the HTML where we want to display things.
            var directionsText = document.getElementById('directions-text');
            var userChoiceText = document.getElementById('userchoice-text');
            var computerChoiceText = document.getElementById('computerchoice-text');
            var winsText = document.getElementById('wins-text');
            var lossesText = document.getElementById('losses-text');
            var tiesText = document.getElementById('ties-text');

            // This function is run whenever the user presses a key.
            document.onkeyup = function (event) {
                // Determines which key was pressed.
                var userGuess = event.key;

                // if (userGuess !== 'r' || userGuess !== 's' || userGuess !== 'p') {
                //   return false;
                // }
                // Randomly chooses a choice from the options array. This is the Computer's guess.
                var computerGuess = computerChoices[Math.floor(Math.random() * computerChoices.length)];

                // Reworked our code from last step to use "else if" instead of lots of if statements.

                // This logic determines the outcome of the game (win/loss/tie), and increments the appropriate number
                if (userGuess === 'r' || userGuess === 'p' || userGuess === 's') {
                    if (
                        (userGuess === 'r' && computerGuess === 's') ||
                        (userGuess === 's' && computerGuess === 'p') ||
                        (userGuess === 'p' && computerGuess === 'r')
                    ) {
                        wins++;
                    } else if (userGuess === computerGuess) {
                        ties++;
                    } else {
                        losses++;
                    }

                    // Hide the directions
                    directionsText.textContent = '';

                    // Display the user and computer guesses, and wins/losses/ties.
                    userChoiceText.textContent = 'You chose: ' + userGuess;
                    computerChoiceText.textContent = 'The computer chose: ' + computerGuess;
                    winsText.textContent = 'wins: ' + wins;
                    lossesText.textContent = 'losses: ' + losses;
                    tiesText.textContent = 'ties: ' + ties;
                }
            };




            //
            // Create an array of words
            var words = [
                "javascript",
                "monkey",
                "amazing",
                "pancake"
            ];
            // Pick a random word
            var word = words[Math.floor(Math.random() * words.length)];
            // Set up the answer array
            var answerArray = [];
            for (var i = 0; i < word.length; i++) {
                answerArray[i] = "_";
            }
            var remainingLetters = word.length;
            // The game loop
            while (remainingLetters > 0) {
                // Show the player their progress
                alert(answerArray.join(" "));
                // Get a guess from the player
                var guess = prompt("Guess a letter, or click Cancel to stop playing.");
                if (guess === null) {
                    // Exit the game loop
                    break;
                } else if (guess.length !== 1) {
                    alert("Please enter a single letter.");
                } else {
                    // Update the game state with the guess
                    for (var j = 0; j < word.length; j++) {
                        if (word[j] === guess) {
                            answerArray[j] = guess;
                            remainingLetters--;
                        }
                    }
                }

                // The end of the game loop
            }
            // Show the answer and congratulate the player
            alert(answerArray.join(" ")); alert("Good job! The answer was " + word);